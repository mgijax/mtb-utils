/*
 * ConnectDialog.java
 */

package org.jax.mgi.mtb.jSql.dialogs;

import java.awt.Frame;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Properties;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;
import org.jax.mgi.mtb.jSql.jSql;

/**
 *
 * @author  mjv
 */
public class ConnectDialog extends JDialog {
    
    private Hashtable connectionInfo;
    private jSql app = null;

    // ----------------------------------------------------------- Constructors
        /** Creates new form ConnectDialog */
    public ConnectDialog(Frame parent, jSql app, boolean modal) {
        super(parent, modal);
        this.app = app;
        initComponents();
        tabbedPaneMain.setTitleAt(0, "Connect");
        tabbedPaneMain.setTitleAt(1, "Connection Manager");
        
    }
    
    // -------------------------------------------------------- Private Methods

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        panelMain = new javax.swing.JPanel();
        tabbedPaneMain = new javax.swing.JTabbedPane();
        panelConnection = new javax.swing.JPanel();
        panelConnectionTop = new javax.swing.JPanel();
        scrollPaneConnections = new javax.swing.JScrollPane();
        listConnections = new javax.swing.JList();
        panelLogo = new javax.swing.JPanel();
        buttonLogo = new javax.swing.JButton();
        panelConnect = new javax.swing.JPanel();
        btnConnect = new javax.swing.JButton();
        panelConnectionProperties = new javax.swing.JPanel();
        panelConnectionList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listConnectionsManager = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        panelJDBCSettings = new javax.swing.JPanel();
        panelInternalJDBCSettings = new javax.swing.JPanel();
        panelDriver = new javax.swing.JPanel();
        lblDriver = new javax.swing.JLabel();
        txtDriver = new javax.swing.JTextField();
        panelUrl = new javax.swing.JPanel();
        lblUrl = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        panelUserName = new javax.swing.JPanel();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        panelPassword = new javax.swing.JPanel();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        panelConnectionHeader = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnSaveNew = new javax.swing.JButton();

        setTitle("jSql Connect");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        panelMain.setLayout(new java.awt.BorderLayout());

        panelConnection.setLayout(new java.awt.BorderLayout());

        panelConnectionTop.setLayout(new java.awt.BorderLayout());

        panelConnectionTop.setBorder(new javax.swing.border.TitledBorder("Connections"));
        scrollPaneConnections.setViewportView(listConnections);

        panelConnectionTop.add(scrollPaneConnections, java.awt.BorderLayout.CENTER);

        buttonLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jax/mgi/mtb/jSql/resources/jSql.gif")));
        buttonLogo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        panelLogo.add(buttonLogo);

        panelConnectionTop.add(panelLogo, java.awt.BorderLayout.NORTH);

        panelConnection.add(panelConnectionTop, java.awt.BorderLayout.CENTER);

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        panelConnect.add(btnConnect);

        panelConnection.add(panelConnect, java.awt.BorderLayout.SOUTH);

        tabbedPaneMain.addTab("tab1", panelConnection);

        panelConnectionProperties.setLayout(new java.awt.BorderLayout(0, 10));

        panelConnectionList.setLayout(new java.awt.BorderLayout(15, 0));

        panelConnectionList.setBorder(new javax.swing.border.TitledBorder("Connections"));
        listConnectionsManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectionMangerListItemSelected(evt);
            }
        });

        jScrollPane1.setViewportView(listConnectionsManager);

        panelConnectionList.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        btnNew.setText("Create Connection");
        btnNew.setMaximumSize(new java.awt.Dimension(175, 26));
        btnNew.setMinimumSize(new java.awt.Dimension(175, 26));
        btnNew.setPreferredSize(new java.awt.Dimension(175, 26));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jPanel4.add(btnNew);

        btnDelete.setText("Remove Connection");
        btnDelete.setMaximumSize(new java.awt.Dimension(175, 26));
        btnDelete.setMinimumSize(new java.awt.Dimension(175, 26));
        btnDelete.setPreferredSize(new java.awt.Dimension(175, 26));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jPanel4.add(btnDelete);

        jPanel1.add(jPanel4);

        panelConnectionList.add(jPanel1, java.awt.BorderLayout.EAST);

        panelConnectionProperties.add(panelConnectionList, java.awt.BorderLayout.CENTER);

        jPanel6.setLayout(new java.awt.BorderLayout());

        panelJDBCSettings.setLayout(new java.awt.BorderLayout());

        panelJDBCSettings.setBorder(new javax.swing.border.TitledBorder("JDBC Connection Settings"));
        panelInternalJDBCSettings.setLayout(new java.awt.GridLayout(4, 1));

        panelDriver.setLayout(new java.awt.BorderLayout());

        lblDriver.setText("Driver");
        panelDriver.add(lblDriver, java.awt.BorderLayout.CENTER);

        txtDriver.setText("JDBC Driver Goes Here");
        panelDriver.add(txtDriver, java.awt.BorderLayout.SOUTH);

        panelInternalJDBCSettings.add(panelDriver);

        panelUrl.setLayout(new java.awt.BorderLayout());

        lblUrl.setText("Url");
        panelUrl.add(lblUrl, java.awt.BorderLayout.CENTER);

        txtUrl.setText("JDBC Url Goes Here");
        panelUrl.add(txtUrl, java.awt.BorderLayout.SOUTH);

        panelInternalJDBCSettings.add(panelUrl);

        panelUserName.setLayout(new java.awt.BorderLayout());

        lblUserName.setText("User Name");
        panelUserName.add(lblUserName, java.awt.BorderLayout.CENTER);

        txtUserName.setText("User Name Goes Here");
        panelUserName.add(txtUserName, java.awt.BorderLayout.SOUTH);

        panelInternalJDBCSettings.add(panelUserName);

        panelPassword.setLayout(new java.awt.BorderLayout());

        lblPassword.setText("Password");
        panelPassword.add(lblPassword, java.awt.BorderLayout.CENTER);

        panelPassword.add(txtPassword, java.awt.BorderLayout.SOUTH);

        panelInternalJDBCSettings.add(panelPassword);

        panelJDBCSettings.add(panelInternalJDBCSettings, java.awt.BorderLayout.CENTER);

        jPanel6.add(panelJDBCSettings, java.awt.BorderLayout.SOUTH);

        panelConnectionHeader.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout(15, 0));

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Connection Name"));
        jPanel2.setFont(new java.awt.Font("Dialog", 1, 12));
        jPanel5.setLayout(new java.awt.BorderLayout());

        lblName.setText("Name");
        jPanel5.add(lblName, java.awt.BorderLayout.CENTER);

        txtName.setText("Connection Name Goes Here");
        jPanel5.add(txtName, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        btnSave.setText("Save Connection");
        btnSave.setMaximumSize(new java.awt.Dimension(175, 26));
        btnSave.setMinimumSize(new java.awt.Dimension(175, 26));
        btnSave.setPreferredSize(new java.awt.Dimension(175, 26));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel3.add(btnSave, java.awt.BorderLayout.NORTH);

        btnSaveNew.setText("Save As New Connection");
        btnSaveNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewActionPerformed(evt);
            }
        });

        jPanel3.add(btnSaveNew, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel3, java.awt.BorderLayout.EAST);

        panelConnectionHeader.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel6.add(panelConnectionHeader, java.awt.BorderLayout.NORTH);

        panelConnectionProperties.add(jPanel6, java.awt.BorderLayout.SOUTH);

        tabbedPaneMain.addTab("tab2", panelConnectionProperties);

        panelMain.add(tabbedPaneMain, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelMain, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void connectionMangerListItemSelected(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectionMangerListItemSelected
        // Add your handling code here:
        System.out.println("Click");
        if (listConnectionsManager.getSelectedIndex() != -1) {
        
            String selectedConnection = (String)listConnectionsManager.getSelectedValue();
            Hashtable temp = (Hashtable)connectionInfo.get(selectedConnection);
        
            if (temp != null) {
                txtName.setText((String)temp.get("name"));
                txtDriver.setText((String)temp.get("driver"));
                txtUrl.setText((String)temp.get("url"));
                txtUserName.setText((String)temp.get("userid"));
                txtPassword.setText((String)temp.get("password"));
            }
        }
        
    }//GEN-LAST:event_connectionMangerListItemSelected

    private void btnSaveNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_btnSaveNewActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        
        if (listConnections.getSelectedIndex() >= 0) {
            try {
                Hashtable h = (Hashtable)connectionInfo.get((String)listConnections.getSelectedValue());
                app.addNewConnection((String)h.get("name"), (String)h.get("driver"), (String)h.get("url"), (String)h.get("userid"), (String)h.get("password"));
                app.setActiveConnectionId((String)h.get("name"));
                this.dispose();
            } catch (Exception e) {
                app.handleException(e);
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        
        String name = txtName.getText();
        String driver = txtDriver.getText();
        String url = txtUrl.getText();
        String userName = txtUserName.getText();
        String password = new String(txtPassword.getPassword());
        
        if ((name.equals("")) || (driver.equals("")) || url.equals("") || userName.equals("") || password.equals("")) {
            app.handleException(new Exception("Please fill in information for all the fields."));
            return;
        }
        
        Hashtable h = (Hashtable)connectionInfo.get((String)listConnectionsManager.getSelectedValue());
        
        if (h == null) {
            h = new Hashtable();
        } else {
            connectionInfo.remove((String)listConnectionsManager.getSelectedValue());
        }
        
        h.put("name",  txtName.getText());
        h.put("driver",  txtDriver.getText());
        h.put("url",  txtUrl.getText());
        h.put("userid",  txtUserName.getText());
        h.put("password",  new String(txtPassword.getPassword()));
        connectionInfo.put( txtName.getText(),  h);
        
        app.saveConnections(connectionInfo);
        setupData();
        
    }//GEN-LAST:event_btnSaveActionPerformed

    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        String name = (String)listConnectionsManager.getSelectedValue();
        //app.deleteConnection(name);
        connectionInfo.remove(name);
        setupData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        
        //comboBoxConnections.setSelectedItem("-- Connections --");
        txtName.setText("");
        txtDriver.setText("");
        txtUrl.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_btnNewActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    private void setupData() {
        String name = null;
        String driver = null;
        String url = null;
        String userid = null;
        String password = null;
        DefaultListModel dm =  new DefaultListModel();
        DefaultListModel dm2 =  new DefaultListModel();
        
        scrollPaneConnections.getViewport().remove(listConnections);
        listConnections = new JList(dm);
        listConnectionsManager.removeAll();

        jScrollPane1.getViewport().remove(listConnectionsManager);
        listConnectionsManager = new JList(dm2);
        listConnectionsManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectionMangerListItemSelected(evt);
            }
        });
        listConnectionsManager.removeAll();
        
        Enumeration e = connectionInfo.keys();
        
        while (e.hasMoreElements()) {
            Hashtable h = (Hashtable)connectionInfo.get((String)e.nextElement());
            name = (String)h.get("name");
            driver = (String)h.get("driver");
            url = (String)h.get("url");
            userid = (String)h.get("userid");
            password = (String)h.get("password");
            
            dm2.add(0, name);
            
            dm.add(0, name);
        }
        
        //listConnectionsManager = new JList(model);
        
        String selectedItemName = txtName.getText();
        //comboBoxConnections.setSelectedItem(selectedItemName);
        Hashtable temp = (Hashtable)connectionInfo.get(selectedItemName);
        
        if (temp != null) {
           txtName.setText((String)temp.get("name"));
           txtDriver.setText((String)temp.get("driver"));
           txtUrl.setText((String)temp.get("url"));
           txtUserName.setText((String)temp.get("userid"));
           txtPassword.setText((String)temp.get("password"));
        } else {
           txtName.setText("");
           txtDriver.setText("");
           txtUrl.setText("");
           txtUserName.setText("");
           txtPassword.setText("");
        }
        
        scrollPaneConnections.getViewport().add(listConnections);
        jScrollPane1.getViewport().add(listConnectionsManager);
    }
    
    public void setProperties(Properties properties) {
        boolean done = false;
        int totalConnections = 0;

        connectionInfo = new Hashtable();
        
        while (!done) {
            Hashtable connection = new Hashtable();
            String name = properties.getProperty("name_" + totalConnections);
            String driver = properties.getProperty("driver_" + totalConnections);
            String url = properties.getProperty("url_" + totalConnections);
            String userid = properties.getProperty("userid_" + totalConnections);
            String password = properties.getProperty("password_" + totalConnections);
            

            if (((driver != null) && (!driver.equals("")))
                    && ((name != null) && (!name.equals("")))
                    && ((password != null) && (!password.equals("")))
                    && ((url != null) && (!url.equals("")))
                    && ((userid != null) && (!userid.equals("")))) {
                totalConnections++;
                connection.put("name", name);
                connection.put("driver", driver);
                connection.put("url", url);
                connection.put("userid", userid);
                connection.put("password", password);
                connectionInfo.put(name, connection);
            } else {
                done = true;
            }
        }
        
        setupData();
    }

    // ----------------------------------------------------- Instance Variables
    DefaultListModel model = new DefaultListModel();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveNew;
    private javax.swing.JButton buttonLogo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDriver;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JList listConnections;
    private javax.swing.JList listConnectionsManager;
    private javax.swing.JPanel panelConnect;
    private javax.swing.JPanel panelConnection;
    private javax.swing.JPanel panelConnectionHeader;
    private javax.swing.JPanel panelConnectionList;
    private javax.swing.JPanel panelConnectionProperties;
    private javax.swing.JPanel panelConnectionTop;
    private javax.swing.JPanel panelDriver;
    private javax.swing.JPanel panelInternalJDBCSettings;
    private javax.swing.JPanel panelJDBCSettings;
    private javax.swing.JPanel panelLogo;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelPassword;
    private javax.swing.JPanel panelUrl;
    private javax.swing.JPanel panelUserName;
    private javax.swing.JScrollPane scrollPaneConnections;
    private javax.swing.JTabbedPane tabbedPaneMain;
    private javax.swing.JTextField txtDriver;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUrl;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
    
}
