/*
 * BrowserTypeListPanel.java
 *
 * Created on December 3, 2003, 9:28 AM
 */

package org.jax.mgi.mtb.jSql.windows;

import java.sql.*;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.util.*;
/**
 *
 * @author  mjv
 */
public class BrowserTypeListPanel extends javax.swing.JPanel {
    DatabaseBrowserFrame f = null;
    CustomItemListener actionListener = null;
    String type = null;
    
    /** Creates new form BrowserTypeListPanel */
    public BrowserTypeListPanel(DatabaseBrowserFrame f, String type, ResultSet rs) {
        super();
        this.f = f;
        this.type = type;
        initComponents();
        populateList(rs);
    }
    
    public String getType() {
        return type;
    }
    
    public void populateList(ResultSet rs) {
        try {
            scrollPaneObjects.getViewport().remove(listObjects);
            
            DefaultListModel dm =  new DefaultListModel();
            listObjects = new JList(dm);
            
            ResultSetMetaData rsmd = rs.getMetaData();
            /*
            for (int i = 1; i < rsmd.getColumnCount(); i++) {
                System.out.println(rsmd.getColumnName(i));
            }
            */
            int count = 0;
            while (rs.next()) {
                dm.add(count++, rs.getString(3));
                //System.out.println(rs.getString(3));
            }
            
            
            listObjects.addListSelectionListener(new CustomListSelectionListener(f));
            
            scrollPaneObjects.getViewport().add(listObjects);
        } catch (Exception e) {
        }
    }        
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        scrollPaneObjects = new javax.swing.JScrollPane();
        listObjects = new javax.swing.JList();

        setLayout(new java.awt.BorderLayout());

        listObjects.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Items go here..." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scrollPaneObjects.setViewportView(listObjects);

        add(scrollPaneObjects, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList listObjects;
    private javax.swing.JScrollPane scrollPaneObjects;
    // End of variables declaration//GEN-END:variables
    
}
class CustomListSelectionListener implements ListSelectionListener {
    DatabaseBrowserFrame f = null;
    
    public CustomListSelectionListener(DatabaseBrowserFrame f) {
        super();
        this.f = f;
    }
    
    // This method is called each time the user changes the selection
    public void valueChanged(ListSelectionEvent evt) {
        // When the user releases the mouse button and completes the selection
        // getValuesIsAdjusting() becomes false
        if (!evt.getValueIsAdjusting()) {
            JList list = (JList)evt.getSource();
            
            // Get all the selected items
            Object[] selected = list.getSelectedValues();
            
            // Iterate over the selected values
            for (int i = 0; i < selected.length; i++) {
                Object sel = selected[i];
                f.populateDetail(sel);
            }
        }
    }
}

